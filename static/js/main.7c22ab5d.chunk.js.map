{"version":3,"sources":["SeasonDisplay.js","Spinner.js","index.js"],"names":["seasonConfig","SUMMER","text","iconName","WINTER","SeasonDisplay","props","lat","month","season","Date","getMonth","className","Spinner","loadmsg","defaultProps","App","state","err","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","message","this","React","Component","ReactDOM","render","document","querySelector"],"mappings":"mMAIMA,G,MACN,CACAC,OACA,CACIC,KAAK,wCACLC,SAAU,OAKdC,OACA,CACIF,KAAK,qCACJC,SAAU,eA4BAE,EAdO,SAAAC,GAClB,IAVeC,EAAKC,EAUdC,GAVSF,EAUUD,EAAMC,KAVXC,GAUgB,IAAIE,MAAOC,YATnC,GAAKH,EAAQ,EACdD,EAAM,EAAI,SAAW,SAGrBA,EAAM,EAAI,SAAW,UAIL,EAGHP,EAAaS,GAA9BP,EAHoB,EAGpBA,KAAMC,EAHc,EAGdA,SAEZ,OACG,yBAAKS,UAAS,yBAAoBH,IAC9B,uBAAGG,UAAS,4BAAuBT,EAAvB,WACZ,4BAAKD,GACL,uBAAGU,UAAS,6BAAwBT,EAAxB,aCtClBU,EAAU,SAACP,GAEb,OACI,yBAAKM,UAAU,oBACX,yBAAKA,UAAU,sBAAsBN,EAAMQ,WAIvDD,EAAQE,aACR,CACAD,QAAU,cAEKD,QCTTG,E,4MAGJC,MAAQ,CAAEV,IAAK,KAAMW,IAAK,I,kEAEL,IAAD,OAClBC,OAAOC,UAAUC,YAAYC,oBAE3B,SAAAC,GAAQ,OAAI,EAAKC,SAAS,CAAEjB,IAAKgB,EAASE,OAAOC,cACjD,SAAAR,GAAG,OAAI,EAAKM,SAAS,CAAEN,IAAIA,EAAIS,e,+BAMjC,OAAIC,KAAKX,MAAMC,MAAQU,KAAKX,MAAMV,IACzB,wCAAcqB,KAAKX,MAAMC,MAE9BU,KAAKX,MAAMC,KAAOU,KAAKX,MAAMV,IAExB,kBAAC,EAAD,CAAgBA,IAAKqB,KAAKX,MAAMV,MAElC,kBAAC,EAAD,CAASO,QAAQ,qC,GAtBVe,IAAMC,WAiCxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.7c22ab5d.chunk.js","sourcesContent":["import './SeasonDisplay.css'\nimport React from 'react';\n\n//import ReactDOM from 'react-dom';\nconst seasonConfig =\n{\nSUMMER :\n{\n    text:\"Lets hit the beach!! (Koko no natsu) \",\n    iconName :'sun' \n    \n   \n},\n\nWINTER :\n{\n    text:'Burr...  its cold!! (Koko no fuyu)',\n     iconName :'snowflake'\n}\n\n};\n\nconst getSeason = (lat, month) => {\n    if (month > 2 && month < 9) {\n        return lat > 0 ? 'SUMMER' : 'WINTER';\n    }\n    else {\n        return lat > 0 ? 'WINTER' : 'SUMMER';\n    }\n};\n\nconst SeasonDisplay = props => {\n    const season = getSeason(props.lat, new Date().getMonth());\n\n    const {text, iconName}= seasonConfig[season];\n\n     return (\n        <div className={`season-display ${season}`} >\n            <i className={`icon-left massive ${iconName} icon`}></i>\n            <h1>{text}</h1>\n            <i className={`icon-right massive ${iconName} icon`}></i>\n        </div>\n    );\n\n};\nexport default SeasonDisplay;","import React from 'react'\n\nconst Spinner = (props) =>\n{\n    return(\n        <div className=\"ui active dimmer\">\n            <div className=\"ui big text loader\">{props.loadmsg}</div>\n        </div>\n    );\n};\nSpinner.defaultProps =\n{\nloadmsg : 'Loading...'\n};\nexport default Spinner;","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport SeasonDisplay from './SeasonDisplay';\nimport Spinner from './Spinner';\n\nclass App extends React.Component {\n\n\n  state = { lat: null, err: '' };\n  \n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(\n      //we call setState\n      position => this.setState({ lat: position.coords.latitude }),\n      err => this.setState({ err:err.message })\n    );\n\n  }\n\n  render() {\n    if (this.state.err && !this.state.lat) {\n      return <div> Error :{this.state.err}</div>\n    }\n    if(!this.state.err && this.state.lat)\n    {\n      return <SeasonDisplay  lat={this.state.lat} />\n    }\n    return <Spinner loadmsg=\"Please give Location access \" />\n  }\n}\n/* make change in render add above render\nrender() {\n  return(\n    <div className =\"border-red\">{this.renderContent()} </div>\n  );\n};\n*/\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}